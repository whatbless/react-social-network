{"version":3,"file":"static/js/829.0d6bb6d7.chunk.js","mappings":"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","sources":["../node_modules/reconnecting-websocket/dist/reconnecting-websocket-mjs.js","pages/ChatPage.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n","import React, { useEffect, useRef, useState } from \"react\";\n//@ts-ignore\nimport nullUserPhoto from \"./../images/avatar.jpeg\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\n\nconst ws = new ReconnectingWebSocket(\n  \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\",\n  //@ts-ignore\n  null,\n  { debug: true, reconnectInterval: 3000 }\n);\n\ntype MessageType = {\n  userId: number;\n  userName: string;\n  message: string;\n  photo: string | undefined;\n};\n\nconst ChatPage = () => {\n  const [messages, setMessages] = useState<MessageType[]>([]);\n\n  useEffect(() => {\n    ws.addEventListener(\"message\", (e) => {\n      const serverMessages = JSON.parse(e.data);\n      setMessages((prevMessages) => [...prevMessages, ...serverMessages]);\n    });\n  }, [ws]);\n\n  return (\n    <div>\n      <Messages messages={messages} />\n      <MessageSendForm />\n    </div>\n  );\n};\n\nconst Messages = ({ messages }) => {\n  const bottomRef = useRef<any>();\n  const [isAutoScrollEnable, setIsAutoScrollEnable] = useState(false);\n\n  const scrollToBottom = () => {\n    if (isAutoScrollEnable) {\n      bottomRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n    }\n  };\n\n  const handleScroll = (e) => {\n    const bottom =\n      Math.abs(\n        e.target.scrollHeight - e.target.scrollTop - e.target.clientHeight\n      ) < 180;\n    if (bottom) {\n      setIsAutoScrollEnable(true);\n    } else {\n      setIsAutoScrollEnable(false);\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  return (\n    <div onScroll={handleScroll} style={{ height: 400, overflowY: \"auto\" }}>\n      {messages.map((m: MessageType, index) => (\n        <Message\n          key={index}\n          message={m.message}\n          userId={m.userId}\n          userName={m.userName}\n          photo={m.photo}\n        />\n      ))}\n      <div ref={bottomRef}></div>\n    </div>\n  );\n};\n\nconst Message: React.FC<MessageType> = React.memo(\n  ({ message, userId, userName, photo }) => {\n    return (\n      <div>\n        <div>\n          <img\n            style={{ width: 50 }}\n            src={photo === null ? nullUserPhoto : photo}\n          ></img>\n          <b>{userName}</b>\n        </div>\n        <div>{message}</div>\n        <hr />\n      </div>\n    );\n  }\n);\n\nconst MessageSendForm = () => {\n  const [message, setMessage] = useState(\"\");\n\n  const sendMessage = () => {\n    if (!message) {\n      return;\n    }\n    ws.send(message);\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <div>\n        <textarea\n          onChange={(e) => {\n            setMessage(e.currentTarget.value);\n          }}\n          value={message}\n        />\n      </div>\n      <div>\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","Event","type","target","ErrorEvent","_super","_this","message","CloseEvent","code","reason","wasClean","getGlobalWebSocket","WebSocket","DEFAULT","maxReconnectionDelay","minReconnectionDelay","Math","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","maxEnqueuedMessages","startClosed","debug","ReconnectingWebSocket","url","protocols","options","_listeners","open","close","_retryCount","_shouldReconnect","_connectLock","_binaryType","_closeCalled","_messageQueue","onclose","onerror","onmessage","onopen","_handleOpen","event","_debug","_a","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","forEach","send","listener","_callEventListener","_handleMessage","_handleError","_disconnect","undefined","_connect","_handleClose","_clearTimeouts","_url","_protocols","defineProperty","get","enumerable","configurable","CONNECTING","OPEN","CLOSING","CLOSED","set","max","reduce","acc","length","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","reconnect","data","addEventListener","dispatchEvent","e_1","listeners","listeners_1","__values","listeners_1_1","e_1_1","return","removeEventListener","filter","l","args","_i","arguments","console","log","apply","concat","__spread","_getNextDelay","_b","_c","_d","delay","pow","_wait","Promise","resolve","_getNextUrl","urlProvider","then","Error","_removeListeners","w","_addListeners","_handleTimeout","handleEvent","ws","reconnectInterval","Messages","_ref","messages","bottomRef","useRef","_useState3","useState","_useState4","_slicedToArray","isAutoScrollEnable","setIsAutoScrollEnable","useEffect","current","scrollIntoView","behavior","block","_jsxs","onScroll","bottom","abs","scrollHeight","scrollTop","clientHeight","style","height","overflowY","children","map","index","_jsx","Message","userId","userName","photo","ref","React","_ref2","width","src","nullUserPhoto","MessageSendForm","_useState5","_useState6","setMessage","onChange","currentTarget","onClick","_useState","_useState2","setMessages","serverMessages","JSON","parse","prevMessages","_toConsumableArray"],"sourceRoot":""}