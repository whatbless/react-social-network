{"version":3,"file":"static/js/390.d7f34a99.chunk.js","mappings":"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","sources":["webpack://counter/./src/components/common/formsControl/formsControl.module.css?eeb5","components/common/formsControl/formsControls.js","components/common/validations/validations.js","webpack://counter/./src/components/login/Login.module.css?3966","components/login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"formsControl_formControl__gLtuz\",\"error\":\"formsControl_error__3RzYY\",\"color\":\"formsControl_color__QMvAT\",\"warning\":\"formsControl_warning__rrs8C\",\"icon\":\"formsControl_icon__xQKnB\"};","import s from \"./formsControl.module.css\";\nimport { faCircleExclamation } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const Textarea = ({ input, meta, ...props }) => {\n  return (\n    <div style={{ backgroundColor: \"#45484e\" }} className={s.formControl}>\n      <div className={s.color}>\n        <textarea\n          rows={1}\n          cols={40}\n          maxLength={35}\n          spellCheck={false}\n          className={s.textarea}\n          {...input}\n          {...props}\n        ></textarea>\n      </div>\n    </div>\n  );\n};\n\nexport const InputLogin = ({ input, meta, ...props }) => {\n  const hasError = meta.touched && meta.error;\n  return (\n    <div\n      style={{ backgroundColor: \"#45484e\" }}\n      className={s.formControl + \" \" + (hasError ? s.error : \"\")}\n    >\n      <div className={s.color}>\n        <input\n          maxLength={35}\n          spellCheck={false}\n          style={{ width: 350 }}\n          {...input}\n          {...props}\n        ></input>\n      </div>\n      {hasError && (\n        <div style={{ backgroundColor: \"#45484e\" }}>\n          <span className={s.warning}>\n            <FontAwesomeIcon className={s.icon} icon={faCircleExclamation} />{\" \"}\n          </span>\n          <span className={s.warning}>{meta.error}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n","export const required = (value) => {\n    if (value) return undefined\n    return \"Field is requrired\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n}\n\nexport const minLengthCreator = (minLength) => (value) => {\n    if (value.length < minLength) return `Min length is ${minLength} symbols` \n}","// extracted by mini-css-extract-plugin\nexport default {\"color\":\"Login_color__4KgtP\",\"textarea\":\"Login_textarea__S+Csl\",\"fieldName\":\"Login_fieldName__MLIK9\",\"header\":\"Login_header__Raoui\",\"button\":\"Login_button__bTaMn\",\"wrap\":\"Login_wrap__Tfu6D\",\"error\":\"Login_error__Dw4G+\"};","import { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { userLogin } from \"../../redux/authReducer.ts\";\nimport { InputLogin, Textarea } from \"../common/formsControl/formsControls\";\nimport { required, minLengthCreator } from \"../common/validations/validations\";\nimport { useNavigate } from \"react-router-dom\";\nimport s from './Login.module.css'\n\nlet minLength5 = minLengthCreator(5)\nlet minLength3 = minLengthCreator(3)\n\nconst LoginForm = (props) => {\n    return (\n        <form className={s.color} onSubmit={props.handleSubmit}>\n            <div style={{ display: 'flex' }} className={s.color}>\n                <div className={s.fieldName}>Email:</div> <Field className={s.textarea} type='text' name='email' component={InputLogin} validate={[required, minLength5]}></Field>\n            </div>\n            <div style={{ display: 'flex' }} className={s.color}>\n                <div className={s.fieldName}>Password:</div> <Field className={s.textarea} type='password' name='password' component={InputLogin} validate={[required, minLength3]}></Field>\n            </div>\n            <div className={s.color}>\n                <Field type='checkbox' name='rememberMe' component='input'></Field> remember me\n            </div>\n            {props.captchaUrl ? <img src={props.captchaUrl}></img> : ''}\n            {props.captchaUrl ? <Field type='text' name='captcha' component={Textarea} /> : ''}\n            {props.error && <div className={s.error}>\n                {props.error}\n            </div>}\n            <div className={s.wrap}>\n                <button className={s.button}>Sign in</button>\n            </div>\n        </form>\n    )\n}\n\nconst Login = (props) => {\n    const onSubmit = (LoginData) => {\n        props.userLogin(LoginData.email, LoginData.password, LoginData.rememberMe, LoginData.captcha)\n    }\n\n    const navigate = useNavigate()\n\n    if (props.isAuth) {\n        navigate(`/profile/${props.userId}`)\n    }\n\n    return (\n        <div className={s.color}>\n            <h2 className={s.header}>Authorization</h2>\n            <ReduxLoginForm error={props.error} onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n        </div>\n    )\n}\n\nlet ReduxLoginForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    userId: state.auth.id,\n    captchaUrl: state.auth.captchaUrl\n})\n\nexport default connect(mapStateToProps, { userLogin })(Login);"],"names":["Textarea","_ref","input","props","meta","_objectWithoutProperties","_excluded","_jsx","style","backgroundColor","className","s","formControl","children","color","_objectSpread","rows","cols","maxLength","spellCheck","textarea","InputLogin","_ref2","_excluded2","hasError","touched","error","_jsxs","width","warning","FontAwesomeIcon","icon","faCircleExclamation","required","value","minLengthCreator","minLength","length","concat","minLength5","minLength3","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","display","Field","type","name","component","validate","captchaUrl","src","connect","state","isAuth","auth","userId","id","userLogin","navigate","useNavigate","LoginData","email","password","rememberMe","captcha"],"sourceRoot":""}